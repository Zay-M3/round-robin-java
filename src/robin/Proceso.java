/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package robin;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author @*
 */
public class Proceso extends javax.swing.JFrame {
    
    ArrayList<Procesos> listaRafagas = new ArrayList<>();
    
    private int contador;
    private int numProceso;
    private String rafaga;
    private String quantum;
    private int time;
    private int timeSalida;
    private int timeEntrada;

    /**
     * Creates new form Proceso
     */
    public Proceso() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaResultados = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        getQuantum = new javax.swing.JTextField();
        getRafaga = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "# Proceso", "T-Salida", "T-Llegada", "T-Proceso", "T-Espera"
            }
        ));
        jScrollPane1.setViewportView(tablaResultados);

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "# Proceso", "Rafaga", "Quantum", "T-Inicio"
            }
        ));
        jScrollPane2.setViewportView(tablaDatos);

        jLabel1.setText("Quantum");

        jLabel2.setText("Rafaga");

        jButton1.setText("AÃ±adir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Iniciar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo promedio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(getQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getRafaga, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(getQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(getRafaga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2))
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if((Integer.parseInt(getRafaga.getText()))<=50){
            ingresarDatos();
            getQuantum.setEditable(false);
        } else {
            JOptionPane.showMessageDialog(this, "La rafaga es incorrecta!");
        }
        
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel modelo = (DefaultTableModel) tablaResultados.getModel();
        modelo.setRowCount(0);
        
        
        int tiempoGlobal = 0;
        boolean hayProcesosEnEjecucion = true;
        
        
        ArrayList<Integer> rafagasOriginales = new ArrayList<>();
        ArrayList<Integer> tiemposFinalizacion = new ArrayList<>();
        
        for(int i = 0; i < listaRafagas.size(); i++){
            rafagasOriginales.add(listaRafagas.get(i).getRafaga());
            tiemposFinalizacion.add(0);
        }
        
        System.out.println("Iniciando algoritmo Round Robin...");
        
        // Algoritmo Round Robin
        while(hayProcesosEnEjecucion){
            hayProcesosEnEjecucion = false;
            
            for(int i = 0; i < listaRafagas.size(); i++){
                if(listaRafagas.get(i).getRafaga() > 0){
                    hayProcesosEnEjecucion = true;
                    
                    // Si la rÃ¡faga restante es mayor que el quantum
                    if(listaRafagas.get(i).getRafaga() > listaRafagas.get(i).getQuantum()){
                        // Ejecutar por quantum completo
                        tiempoGlobal += listaRafagas.get(i).getQuantum();
                        listaRafagas.get(i).setRafaga(listaRafagas.get(i).getRafaga() - listaRafagas.get(i).getQuantum());
                        
                        System.out.println("Proceso " + listaRafagas.get(i).getNumProcesos() + 
                                         " ejecutado por " + listaRafagas.get(i).getQuantum() + 
                                         " unidades. RÃ¡faga restante: " + listaRafagas.get(i).getRafaga());
                    } 
                    else {
                        
                        tiempoGlobal += listaRafagas.get(i).getRafaga();
                        tiemposFinalizacion.set(i, tiempoGlobal);
                        
                        System.out.println("Proceso " + listaRafagas.get(i).getNumProcesos() + 
                                         " TERMINADO. Tiempo final: " + tiempoGlobal);
                        
                        listaRafagas.get(i).setRafaga(0); 
                    }
                }
            }
        }
        
        System.out.println("Algoritmo completado. Tiempo total: " + tiempoGlobal);
       
        double tiempoEsperaTotal = 0;
        for(int i = 0; i < listaRafagas.size(); i++){
            int numProceso = listaRafagas.get(i).getNumProcesos();
            int tLlegada = listaRafagas.get(i).getTime(); 
            int tFinalizacion = tiemposFinalizacion.get(i);
            int tProceso = tFinalizacion - tLlegada; 
            int tEspera = tProceso - rafagasOriginales.get(i); 
            
            tiempoEsperaTotal += tEspera;
            
            
            listaRafagas.get(i).setRafaga(rafagasOriginales.get(i));
            
            rellenarTabla(numProceso, tFinalizacion, tLlegada, tProceso, tEspera);
            
            System.out.println("Proceso " + numProceso + ": Llegada=" + tLlegada + 
                             ", FinalizaciÃ³n=" + tFinalizacion + ", TiempoProceso=" + tProceso + 
                             ", TiempoEspera=" + tEspera);
        }
        
        
        double tiempoPromedioEspera = tiempoEsperaTotal / listaRafagas.size();
        jTextField1.setText(String.format("%.2f", tiempoPromedioEspera));
        
        System.out.println("Tiempo promedio de espera: " + tiempoPromedioEspera);
                
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proceso().setVisible(true);
            }
        });
    }
    
    
    public void ingresarDatos(){
        DefaultTableModel modelo =(DefaultTableModel) tablaDatos.getModel();
        
        try{
            contador ++;
            
            numProceso = contador;
            rafaga = getRafaga.getText();
            quantum = getQuantum.getText();
            time = contador-1;
            

            Procesos p = new Procesos(numProceso, Integer.parseInt(rafaga), Integer.parseInt(quantum), time);
            listaRafagas.add(p);   
            
            
            Object[] miTabla = new Object[5];
            miTabla[0]= contador;
            miTabla[1]= getRafaga.getText();
            miTabla[2]= getQuantum.getText();
            miTabla[3]= contador-1;
            modelo.addRow(miTabla);
            tablaDatos.setModel(modelo);
            getRafaga.setText(null);
            getRafaga.grabFocus();
            
            /*String mensaje = "";
            for(int i = 0;i<listaRafagas.size();i++){
                mensaje = "";
                mensaje += listaRafagas.get(i);
            }
            System.out.println(mensaje);*/
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Imbecil!");
        }
            
    }
    
    public void rellenarTabla(int numProceso, int tSalida, int tEntrada,int tProceso, int tEspera){
        
        DefaultTableModel modelo =(DefaultTableModel) tablaResultados.getModel();
        
        Object[] miTabla = new Object[5];
            miTabla[0]= numProceso;
            miTabla[1]= tSalida;
            miTabla[2]= tEntrada;
            miTabla[3]= tProceso;
            miTabla[4]= tEspera;
            modelo.addRow(miTabla);
            tablaResultados.setModel(modelo);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField getQuantum;
    private javax.swing.JTextField getRafaga;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JTable tablaResultados;
    // End of variables declaration//GEN-END:variables
}
